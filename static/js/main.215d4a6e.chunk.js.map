{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/image.png","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","deaths","recovered","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","console","log","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","event","target","i","App","props","fetchedData","setState","state","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.215d4a6e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1688g\",\"card\":\"Cards_card__1Bj8n\",\"infected\":\"Cards_infected__2hDfX\",\"recovered\":\"Cards_recovered__15Sas\",\"deaths\":\"Cards_deaths__1Vecy\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid,} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\n\r\nimport styles from './Cards.module.css';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({data: {confirmed, deaths, recovered, lastUpdate}}) => {\r\n    // console.log(confirmed)\r\n    if(!confirmed){\r\n        return 'Loading..';\r\n    }\r\n    return (\r\n        <div className = {styles.container}>\r\n            <Grid container spacing ={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color = \"textSecondary\" gutterBottom>INFECTED</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp\r\n                                start={0}\r\n                                end={confirmed.value}\r\n                                duration={2.5}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography color = \"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant = \"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>RECOVERED</Typography>\r\n                        <Typography variant=\"h5\"> <CountUp\r\n                            start={0}\r\n                            end={recovered.value}\r\n                            duration={2.5}\r\n                            separator=\",\"\r\n                        /></Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>DEATHS</Typography>\r\n                        <Typography variant=\"h5\"> <CountUp\r\n                            start={0}\r\n                            end={deaths.value}\r\n                            duration={2.5}\r\n                            separator=\",\"\r\n                        /></Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';    // make api request\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async(country) => {\r\n    let changeableUrl =url;\r\n\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`\r\n    }\r\n    try {\r\n        const { data } = await axios.get(changeableUrl);  \r\n\r\n        const modifiedData = {\r\n            confirmed: data.confirmed,\r\n            recovered: data.recovered,\r\n            deaths: data.deaths,\r\n            lastUpdate: data.lastUpdate\r\n        }\r\n        return modifiedData\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async() => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n\r\n        }));\r\n        return modifiedData;\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: { countries } } = await axios.get(`${url}/countries`);\r\n        return countries.map((countries) => countries.name);\r\n        \r\n    } catch (error) {\r\n        \r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport {fetchDailyData} from '../../api'\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\n\r\nimport styles from './Chart.module.css'; \r\n\r\n\r\nconst Chart = ({data: {confirmed, recovered, deaths}, country}) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        //console.log(dailyData);\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length \r\n            ? (\r\n                <Line\r\n                    data={{\r\n                        labels: dailyData.map(({ date }) => date),\r\n                        datasets: [{\r\n                            data: dailyData.map(({ confirmed }) => confirmed),\r\n                            label: 'Infected',\r\n                            borderColor: '#3333ff',\r\n                            fill: true,\r\n                        }, {\r\n                            data: dailyData.map(({ deaths }) => deaths),\r\n                            label: 'Deaths',\r\n                            borderColor: 'red',\r\n                            backgroundColor: 'rgba(250, 0, 0, 0.5)',\r\n                            fill: true,\r\n                        }],\r\n                    }}\r\n                />\r\n            ) : null\r\n    );\r\n    console.log(confirmed, recovered,deaths)\r\n    const barChart = (\r\n        confirmed ? (\r\n            \r\n            <Bar \r\n             data={{\r\n                labels: ['Infected', 'Recovered', 'Deaths'],\r\n                datasets: [{\r\n                    label: 'People',\r\n                    backgroundColor: ['rgba(0, 0, 255, 0.5)','rgba(0, 255, 0, 0.5)','rgba(255, 0, 0, 0.5)'],\r\n                    data: [confirmed.value, recovered.value, deaths.value],\r\n                },],\r\n                \r\n             }}\r\n             options={{\r\n                 legend: {display: false},\r\n                 title: {display: true, text: `Current state in ${country}`},\r\n             }}\r\n             />\r\n         ) : null\r\n    );\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, { useEffect, useState } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() =>{\r\n        const fetchAPI = async() => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    },[setFetchedCountries]);\r\n\r\n   \r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue= \"\" onChange={(event) =>handleCountryChange(event.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)};\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React, { Component } from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker, } from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData, } from './api';\r\n\r\nimport coronaImage from './images/image.png'\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             data : {},\r\n             country : '',\r\n        }\r\n    }\r\n    \r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n        \r\n        this.setState({\r\n            data: fetchedData,\r\n        });\r\n    }\r\n\r\n    handleCountryChange = async(country) => {\r\n        const fetchedData = await fetchData(country);\r\n        //fetching data\r\n        this.setState({ data: fetchedData , country: country});\r\n        \r\n        //setstate\r\n    }\r\n    render() {\r\n        const {data, country} = this.state;\r\n        return (\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={coronaImage} alt=\"COVID-19\"/>\r\n                <Cards data = {data} />\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App /> , document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3ZdQw\",\"image\":\"App_image__2yq5Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3MUgJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2lD-3\"};"],"sourceRoot":""}